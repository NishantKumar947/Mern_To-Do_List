{"ast":null,"code":"var _jsxFileName = \"D:\\\\mini javascript project\\\\Mern stack\\\\MERN-Stack-Projects\\\\todo-list\\\\client\\\\src\\\\components\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { addNewTodo } from \"../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const dispatch = useDispatch();\n  const onFormSubmit = e => {\n    e.preventDefault();\n    if (text.trim()) {\n      // Prevent adding empty todos\n      dispatch(addNewTodo(text));\n      setText('');\n    }\n  };\n  const onInputChange = e => {\n    setText(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: styles.form,\n    onSubmit: onFormSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Enter new todo...\",\n      style: styles.input,\n      onChange: onInputChange,\n      value: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoForm, \"8rmXpqc15RKCZtOebusSRHPVshk=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoForm;\nconst styles = {\n  form: {\n    display: 'flex',\n    justifyContent: 'center',\n    margin: '20px 0',\n    padding: '10px'\n  },\n  input: {\n    width: '100%',\n    maxWidth: '600px',\n    // Limit the width for better appearance on larger screens\n    padding: '15px',\n    fontSize: '1.1rem',\n    border: '2px solid #61dafb',\n    borderRadius: '5px',\n    boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n    outline: 'none',\n    transition: 'border-color 0.3s, box-shadow 0.3s'\n  },\n  inputFocus: {\n    borderColor: '#3498db',\n    boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)'\n  }\n};\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","useDispatch","addNewTodo","jsxDEV","_jsxDEV","TodoForm","_s","text","setText","dispatch","onFormSubmit","e","preventDefault","trim","onInputChange","target","value","style","styles","form","onSubmit","children","placeholder","input","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","display","justifyContent","margin","padding","width","maxWidth","fontSize","border","borderRadius","boxShadow","outline","transition","inputFocus","borderColor","$RefreshReg$"],"sources":["D:/mini javascript project/Mern stack/MERN-Stack-Projects/todo-list/client/src/components/TodoForm.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addNewTodo } from \"../redux/actions\";\r\n\r\nconst TodoForm = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const dispatch = useDispatch();\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (text.trim()) { // Prevent adding empty todos\r\n            dispatch(addNewTodo(text));\r\n            setText('');\r\n        }\r\n    };\r\n\r\n    const onInputChange = (e) => {\r\n        setText(e.target.value);\r\n    };\r\n\r\n    return (\r\n        <form style={styles.form} onSubmit={onFormSubmit}>\r\n            <input  \r\n                placeholder=\"Enter new todo...\"\r\n                style={styles.input}\r\n                onChange={onInputChange}\r\n                value={text}\r\n            />\r\n        </form>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n    form: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        margin: '20px 0',\r\n        padding: '10px',\r\n    },\r\n    input: {\r\n        width: '100%',\r\n        maxWidth: '600px', // Limit the width for better appearance on larger screens\r\n        padding: '15px',\r\n        fontSize: '1.1rem',\r\n        border: '2px solid #61dafb',\r\n        borderRadius: '5px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n        outline: 'none',\r\n        transition: 'border-color 0.3s, box-shadow 0.3s',\r\n    },\r\n    inputFocus: {\r\n        borderColor: '#3498db',\r\n        boxShadow: '0 4px 12px rgba(0, 0, 0, 0.3)',\r\n    }\r\n};\r\n\r\nexport default TodoForm;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,UAAU,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAMS,YAAY,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIL,IAAI,CAACM,IAAI,CAAC,CAAC,EAAE;MAAE;MACfJ,QAAQ,CAACP,UAAU,CAACK,IAAI,CAAC,CAAC;MAC1BC,OAAO,CAAC,EAAE,CAAC;IACf;EACJ,CAAC;EAED,MAAMM,aAAa,GAAIH,CAAC,IAAK;IACzBH,OAAO,CAACG,CAAC,CAACI,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,oBACIZ,OAAA;IAAMa,KAAK,EAAEC,MAAM,CAACC,IAAK;IAACC,QAAQ,EAAEV,YAAa;IAAAW,QAAA,eAC7CjB,OAAA;MACIkB,WAAW,EAAC,mBAAmB;MAC/BL,KAAK,EAAEC,MAAM,CAACK,KAAM;MACpBC,QAAQ,EAAEV,aAAc;MACxBE,KAAK,EAAET;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEf,CAAC;AAACtB,EAAA,CA1BID,QAAQ;EAAA,QAEOJ,WAAW;AAAA;AAAA4B,EAAA,GAF1BxB,QAAQ;AA4Bd,MAAMa,MAAM,GAAG;EACXC,IAAI,EAAE;IACFW,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,QAAQ;IACxBC,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;EACb,CAAC;EACDV,KAAK,EAAE;IACHW,KAAK,EAAE,MAAM;IACbC,QAAQ,EAAE,OAAO;IAAE;IACnBF,OAAO,EAAE,MAAM;IACfG,QAAQ,EAAE,QAAQ;IAClBC,MAAM,EAAE,mBAAmB;IAC3BC,YAAY,EAAE,KAAK;IACnBC,SAAS,EAAE,8BAA8B;IACzCC,OAAO,EAAE,MAAM;IACfC,UAAU,EAAE;EAChB,CAAC;EACDC,UAAU,EAAE;IACRC,WAAW,EAAE,SAAS;IACtBJ,SAAS,EAAE;EACf;AACJ,CAAC;AAED,eAAelC,QAAQ;AAAC,IAAAwB,EAAA;AAAAe,YAAA,CAAAf,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}